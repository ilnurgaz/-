Сценарий 1: Добавление пользователя

Цель: Проверить, что пользователь корректно добавляется в систему.
Шаги:

    Вызвать функцию addUser с именем "Igor" и возрастом 24.
    Проверить, что пользователь добавлен в массив users.
    Проверить, что свойства нового пользователя (name, age, id) соответствуют переданным данным.

Ожидаемый результат:

    Пользователь добавлен в массив users.
    Свойства объекта пользователя корректно инициализированы.

Фактический результат:

    Пользователь добавлен с правильными данными.

Сценарий 2: Добавление поста пользователем

Цель: Убедиться, что посты корректно добавляются к пользователю и в общий массив постов.
Шаги:

    Добавить нового пользователя.
    Вызвать метод addPost для этого пользователя с заголовком "Test Post" и текстом "This is a test.".
    Проверить, что пост добавлен в массив posts пользователя и в общий массив posts.
    Проверить свойства поста (title, text, id, userId).

Ожидаемый результат:

    Пост добавлен в массив posts пользователя.
    Пост добавлен в общий массив posts.
    Свойства поста корректно инициализированы.

Фактический результат:

    Пост успешно добавлен.

Сценарий 3: Удаление поста

Цель: Проверить, что посты корректно удаляются из обоих массивов.
Шаги:

    Добавить пользователя.
    Создать два поста с методами addPost.
    Вызвать метод delPost для первого поста (по его id).
    Проверить, что первый пост удален из массива posts пользователя и общего массива.

Ожидаемый результат:

    Пост удален из массива posts пользователя.
    Пост удален из общего массива posts.
    Остались только не удаленные посты.

Фактический результат:

    Пост успешно удален.

Сценарий 4: Изменение поста

Цель: Убедиться, что пост корректно изменяется.
Шаги:

    Добавить пользователя.
    Создать пост с методом addPost.
    Вызвать метод changePost для изменения заголовка на "Updated Title" и текста на "Updated text".
    Проверить, что свойства измененного поста обновились.

Ожидаемый результат:

    Заголовок и текст поста изменены.
    Остальные свойства поста остались неизменными.

Фактический результат:

    Пост успешно изменен.

Сценарий 5: Получение всех постов пользователя

Цель: Проверить, что метод allPosts возвращает корректный список постов пользователя.
Шаги:

    Добавить пользователя.
    Создать два поста.
    Вызвать метод allPosts.
    Убедиться, что возвращается массив постов пользователя с правильными данными.

Ожидаемый результат:

    Возвращается массив всех постов пользователя.
    Каждый пост содержит корректные данные.

Фактический результат:

    Метод возвращает массив всех постов.

Сценарий 6: Обработка пустых данных при добавлении поста

Цель: Проверить, что пустые заголовок и текст обрабатываются корректно.
Шаги:

    Добавить пользователя.
    Вызвать метод addPost с пустыми строками для заголовка и текста.
    Проверить, что пост создается, но с пустыми значениями.

Ожидаемый результат:

    Пост создается с пустыми заголовком и текстом.

Фактический результат:

    Пост создан с пустыми значениями.

Сценарий 7: Удаление несуществующего поста

Цель: Проверить, что удаление несуществующего поста не приводит к ошибкам.
Шаги:

    Добавить пользователя.
    Попробовать удалить пост с несуществующим id (например, 999).
    Проверить, что массивы posts и user.posts остались без изменений.

Ожидаемый результат:

    Массивы остаются неизменными.

Фактический результат:

    Ошибок нет, массивы не изменились.
